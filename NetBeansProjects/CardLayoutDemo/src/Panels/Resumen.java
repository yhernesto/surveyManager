/*
 * To change panel license header, choose License Headers in Project Properties.
 * To change panel template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import InterfaceClasses.ProffesorQuestion;
import InterfaceClasses.Question;
import InterfaceClasses.Questions;
import InterfaceClasses.SubjectQuestion;
import static Panels.Resumen.RIGHT_TO_LEFT;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Container;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.Map;
import javax.swing.JLabel;
import layout.GeneratorControllerInterface;

/**
 *
 * @author ernesto
 */
public class Resumen extends javax.swing.JPanel {

    public GeneratorControllerInterface gci;
    final static boolean shouldFill = true;
    final static boolean shouldWeightX = true;
    final static boolean RIGHT_TO_LEFT = false;
    private static int currentY    = 0;
    private static GridBagConstraints c = new GridBagConstraints();
    private static final int H = 0;
    private static final int H1 = 1;
    private static final int H2 = 2;
    private static final int H3 = 3;
    private static final int questionLength = 30;
    private static final String headerCategorySubjects = "Asignaturas";
    private static final String headerCategoryProffesors = "Profesores";
    private static final String headerTypeNumerical = "Númericas";
    private static final String headerTypeTextual = "Textuales";
    private static final String headerDataQuestion = "Pregunta";
    private static final String headerDataProffesorName = "Profesor";
    private static final String headerDataAnswer = "<html>Columna de<br>respuestas</html>";
    
    public Resumen(GeneratorControllerInterface gci) {
        initComponents();
        this.gci = gci;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify panel code. The content of panel method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
        );

        scrollPane.setViewportView(panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void myInitComponents(){
         if (RIGHT_TO_LEFT) {
            panel.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        }
        Questions subjectNumericalData  = gci.getSubjectNumericalData();
        Questions subjectTextualData    = gci.getSubjectTextualData();
        Questions proffesorNumericalData= gci.getProffesorNumericalData();
        Questions proffesorTextualData  = gci.getProffesorTextualData();
         
         
//        initData();

        JLabel label;
        JLabel title_1;
        JLabel title_2;
        panel.setLayout(new GridBagLayout());

        title_1 = new JLabel(headerCategorySubjects);
        add(1,H1,title_1,panel);

        nextLine();
        title_2 = new JLabel(headerTypeNumerical);
        add(0,H2,title_2,panel);

        nextLine();
        label = new JLabel(headerDataQuestion);
        add(0,H3,label,panel);
        label = new JLabel(headerDataAnswer);    
        add(1,H3,label,panel);

        /************** data *************/
        String data = "";
        JLabel questionLabel;
        SubjectQuestion subjQuestion;
        for(int i = 0; i < subjectNumericalData.size(); i++){
            nextLine();
            subjQuestion = (SubjectQuestion) subjectNumericalData.getQuestions().get(i);
            data = subjQuestion.getQuestion();
            if(data.length() > questionLength) data = data.substring(0, questionLength - 1) + " ";
            questionLabel = new JLabel(data);
            css(questionLabel, H);    
            add(0,H,questionLabel,panel);
            questionLabel = new JLabel(subjQuestion.getAnswer());
            add(1,H,questionLabel,panel);
        }

        /*********************************/

        // TEXTUALES
        // Título
        nextLine();
        title_2 = new JLabel(headerTypeTextual);
        add(0,H2,title_2,panel);

        nextLine();
        label = new JLabel(headerDataQuestion);
        add(0,H3,label,panel);
        label = new JLabel(headerDataAnswer);
        add(1,H3,label,panel);

        /************* data **************/
        for(int i = 0; i < subjectTextualData.size(); i++){            
            nextLine();
            subjQuestion = (SubjectQuestion) subjectTextualData.getQuestions().get(i);
            data = subjQuestion.getQuestion();
            if(data.length() > questionLength) data = data.substring(0, questionLength - 1) + " ";
            questionLabel = new JLabel(data);
            add(0,H,questionLabel,panel);
            questionLabel = new JLabel(subjQuestion.getAnswer());
            add(1,H,questionLabel,panel);
        }
        /*********************************/

        nextLine();
        label = new JLabel(" ");
        add(0,H,label,panel);

        nextLine();
        title_1 = new JLabel(headerCategoryProffesors);    
        add(1,H1,title_1,panel);

        // Título
        nextLine();
        title_2 = new JLabel(headerTypeNumerical);
        add(0,H2,title_2,panel);

        // titulo 2
        nextLine();
        label = new JLabel(headerDataQuestion);
        add(0,H3,label,panel);
        label = new JLabel(headerDataProffesorName);
        add(1,H3,label,panel);
        label = new JLabel(headerDataAnswer);
        add(2,H3,label,panel);

        /************** data *************/
        ProffesorQuestion proffQuestion;
        for(Question question : proffesorNumericalData.getQuestions()){
            int cont = 1;
            nextLine();
            proffQuestion = (ProffesorQuestion) question;
            data = proffQuestion.getQuestion();
            if(data.length() > questionLength) data = data.substring(0, questionLength - 1) + " ";
            questionLabel = new JLabel(data);
            add(0,H,questionLabel,panel);
            for(String profAnswers : proffQuestion.getProffesorsAnswers()) {
                questionLabel = new JLabel("Profesor " + cont + ": " );
                add(1,H,questionLabel,panel);
                questionLabel = new JLabel(profAnswers);
                add(2,H,questionLabel,panel);
                nextLine();
                cont++;
            }
        }
        
        // TEXTUALES
        // Título
        nextLine();
        title_1 = new JLabel(headerTypeTextual);
        add(0,H2,title_1,panel);

        // titulo 2
        nextLine();
        label = new JLabel(headerDataQuestion);
        add(0,H3,label,panel);
        label = new JLabel(headerDataProffesorName);
        add(1,H3,label,panel);
        label = new JLabel(headerDataAnswer);
        add(2,H3,label,panel);

         /************** data *************/
         for(Question question : proffesorTextualData.getQuestions()){
            int cont = 1;
            nextLine();
            proffQuestion = (ProffesorQuestion) question;
            data = proffQuestion.getQuestion();
            if(data.length() > questionLength) data = data.substring(0, questionLength - 1) + " ";
            questionLabel = new JLabel(data);
            add(0,H,questionLabel,panel);
            for(String answer : proffQuestion.getProffesorsAnswers()) {
                questionLabel = new JLabel("Profesor " + cont + ": " );
//                if(data.length() > questionLength) data = data.substring(0, questionLength - 1) + " ";
                add(1,H,questionLabel,panel);
                questionLabel = new JLabel(answer);
                add(2,H,questionLabel,panel);
                nextLine();
                cont++;
            }
         }        
        scrollPane.add(panel);
        scrollPane.setViewportView(panel);
    }
        
    private void add(int x, int style, Component com, Container panell){
        css((JLabel) com, style);         
        c.fill = GridBagConstraints.HORIZONTAL;
        c.weightx = 0.5;
        c.gridx = x;
        c.gridy = currentY;
        panell.add(com, c);   
    }

    private void nextLine(){
        currentY++;
    }

    private void css(JLabel label, int style){
        switch (style){
            case H:
                label.setFont(new Font("arial", Font.PLAIN, 11));
                break;
            case H1:
                label.setFont(new Font("arial", Font.ITALIC + Font.BOLD, 22));
                break;
            case H2:
                label.setFont(new Font("arial", Font.BOLD, 18));
                break;
            case H3:
                label.setFont(new Font("arial", Font.BOLD, 14));
                break;
            default:
                break;
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
